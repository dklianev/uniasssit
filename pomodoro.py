#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Pomodoro —Ç–∞–π–º–µ—Ä
–ë–∞–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–Ω–æ—Å—Ç –∑–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç
"""

import time
import threading
from datetime import datetime

class PomodoroTimer:
    def __init__(self):
        self.work_minutes = 25
        self.break_minutes = 5
        
        self.is_running = False
        self.is_paused = False
        self.current_session = None  # 'work' –∏–ª–∏ 'break'
        self.remaining_seconds = 0
        self.sessions_completed = 0
        
        print("üçÖ Pomodoro —Ç–∞–π–º–µ—Ä –≥–æ—Ç–æ–≤!")
    
    def start_session(self, session_type):
        """–û–±—â –º–µ—Ç–æ–¥ –∑–∞ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ —Å–µ—Å–∏—è"""
        if self.is_running:
            print("‚ö†Ô∏è –¢–∞–π–º–µ—Ä—ä—Ç –≤–µ—á–µ —Ä–∞–±–æ—Ç–∏!")
            return False
        
        self.current_session = session_type
        self.is_paused = False
        minutes = self.work_minutes if session_type == 'work' else self.break_minutes
        self.remaining_seconds = minutes * 60
        self.is_running = True
        
        session_name = "—Ä–∞–±–æ—Ç–Ω–∞ —Å–µ—Å–∏—è" if session_type == 'work' else "–ø–æ—á–∏–≤–∫–∞"
        print(f"{'üéØ' if session_type == 'work' else '‚òï'} –ó–∞–ø–æ—á–≤–∞–º {session_name}: {minutes} –º–∏–Ω—É—Ç–∏")
        self._start_timer()
        return True
    
    def start_work_session(self):
        """–ó–∞–ø–æ—á–≤–∞ —Ä–∞–±–æ—Ç–Ω–∞ —Å–µ—Å–∏—è –æ—Ç 25 –º–∏–Ω—É—Ç–∏"""
        return self.start_session('work')
    
    def start_break_session(self):
        """–ó–∞–ø–æ—á–≤–∞ –ø–æ—á–∏–≤–∫–∞ –æ—Ç 5 –º–∏–Ω—É—Ç–∏"""
        return self.start_session('break')
    
    def pause_timer(self):
        """–ü—Ä–µ–≤–∫–ª—é—á–≤–∞ –ø–∞—É–∑–∞/–ø—Ä–æ–¥—ä–ª–∂–∏"""
        self.is_paused = not self.is_paused
        print("‚è∏Ô∏è –ü–∞—É–∑–∞" if self.is_paused else "‚ñ∂Ô∏è –ü—Ä–æ–¥—ä–ª–∂–∞–≤–∞–º")
    
    def stop_timer(self):
        """–°–ø–∏—Ä–∞ —Ç–∞–π–º–µ—Ä–∞"""
        if self.is_running:
            self.is_running = False
            self.is_paused = False
            print("‚èπÔ∏è –¢–∞–π–º–µ—Ä—ä—Ç –µ —Å–ø—Ä—è–Ω")
            return True
        else:
            print("‚ö†Ô∏è –¢–∞–π–º–µ—Ä—ä—Ç –Ω–µ —Ä–∞–±–æ—Ç–∏")
            return False
    
    def _start_timer(self):
        """–í—ä—Ç—Ä–µ—à–µ–Ω –º–µ—Ç–æ–¥ –∑–∞ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ —Ç–∞–π–º–µ—Ä–∞"""
        def timer_thread():
            while self.is_running and self.remaining_seconds > 0:
                if not self.is_paused:
                    time.sleep(1)
                    self.remaining_seconds -= 1
                    
                    # –ü–æ–∫–∞–∑–≤–∞–º–µ –ø—Ä–æ–≥—Ä–µ—Å–∞ –Ω–∞ –≤—Å–µ–∫–∏ 5 –º–∏–Ω—É—Ç–∏
                    if self.remaining_seconds % 300 == 0 and self.remaining_seconds > 0:
                        minutes_left = self.remaining_seconds // 60
                        print(f"‚è∞ –û—Å—Ç–∞–≤–∞—Ç {minutes_left} –º–∏–Ω—É—Ç–∏...")
                else:
                    time.sleep(0.1)  # –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –∑–∞ unpause –ø–æ-—á–µ—Å—Ç–æ
            
            # –¢–∞–π–º–µ—Ä—ä—Ç –ø—Ä–∏–∫–ª—é—á–∏
            if self.is_running:
                self._session_completed()
        
        # –°—Ç–∞—Ä—Ç–∏—Ä–∞–º–µ –≤ –æ—Ç–¥–µ–ª–µ–Ω thread
        thread = threading.Thread(target=timer_thread, daemon=True)
        thread.start()
    
    def _session_completed(self):
        """–û–±—Ä–∞–±–æ—Ç–≤–∞ –∑–∞–≤—ä—Ä—à–≤–∞–Ω–µ—Ç–æ –Ω–∞ —Å–µ—Å–∏—è"""
        self.is_running = False
        self.is_paused = False
        
        if self.current_session == 'work':
            self.sessions_completed += 1
            print(f"üéâ –†–∞–±–æ—Ç–Ω–∞—Ç–∞ —Å–µ—Å–∏—è –ø—Ä–∏–∫–ª—é—á–∏! –û–±—â–æ —Å–µ—Å–∏–∏: {self.sessions_completed}")
            print("üí° –ü—Ä–µ–ø–æ—Ä—ä–∫–∞: –ó–∞–ø–æ—á–Ω–µ—Ç–µ –ø–æ—á–∏–≤–∫–∞ –æ—Ç 5 –º–∏–Ω—É—Ç–∏")
        else:
            print("‚úÖ –ü–æ—á–∏–≤–∫–∞—Ç–∞ –ø—Ä–∏–∫–ª—é—á–∏!")
            print("üí° –ü—Ä–µ–ø–æ—Ä—ä–∫–∞: –ó–∞–ø–æ—á–Ω–µ—Ç–µ –Ω–æ–≤–∞ —Ä–∞–±–æ—Ç–Ω–∞ —Å–µ—Å–∏—è")
        
        print("\a")  # –ó–≤—É–∫–æ–≤ —Å–∏–≥–Ω–∞–ª
        self.current_session = None
    
    def get_status(self):
        """–í—Ä—ä—â–∞ —Ç–µ–∫—É—â–∏—è —Å—Ç–∞—Ç—É—Å –Ω–∞ —Ç–∞–π–º–µ—Ä–∞"""
        if not self.is_running:
            return {
                'status': 'stopped',
                'message': '–¢–∞–π–º–µ—Ä—ä—Ç –Ω–µ —Ä–∞–±–æ—Ç–∏',
                'sessions_completed': self.sessions_completed
            }
        
        minutes = self.remaining_seconds // 60
        seconds = self.remaining_seconds % 60
        time_left = f"{minutes:02d}:{seconds:02d}"
        
        session_type = "–†–∞–±–æ—Ç–∞" if self.current_session == 'work' else "–ü–æ—á–∏–≤–∫–∞"
        
        if self.is_paused:
            message = f"{session_type}: –ü–ê–£–ó–ê - {time_left}"
        else:
            message = f"{session_type}: {time_left}"
        
        return {
            'status': 'running',
            'session_type': session_type,
            'time_left': time_left,
            'remaining_seconds': self.remaining_seconds,
            'sessions_completed': self.sessions_completed,
            'message': message,
            'is_paused': self.is_paused
        }
    
    def get_statistics(self):
        """–í—Ä—ä—â–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        return {
            'sessions_completed': self.sessions_completed,
            'total_work_minutes': self.sessions_completed * self.work_minutes,
            'work_session_length': self.work_minutes,
            'break_length': self.break_minutes
        } 